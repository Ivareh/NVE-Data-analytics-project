[tool.poetry]
name = "NVE-magasin-statistics-src-data-load"
version = "0.1.0"
description = "Load data from NVE's magasin API and insert into source db"
authors = ["Ivar E. Haugland <comboshotmc@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = ">2.0"

pydantic-settings = "^2.2.1"
pandas = "2.2.0"
requests = "^2.31.0"
sqlalchemy = "^2.0.38"
psycopg = "^3.2.4"
psycopg2 = "^2.9.10"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
mypy = "^1.8.0"
ruff = "^0.2.2"
pre-commit = "^3.6.2"
types-passlib = "^1.7.7.20240106"
coverage = "^7.4.3"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true


[tool.pytest.ini_options]
log_cli = true
log_cli_level = "ERROR"
log_cli_format = "%(message)s"

log_file = "app/logs/pytest.log"
log_file_level = "INFO"
log_file_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_file_date_format = "%Y-%m-%d %H:%M:%S"
