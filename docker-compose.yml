services:
  nve_db:
    image: postgres:latest
    ports:
      - "5432:5432"
    networks:
      - nve_elt_network
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./src/source/db/nve_db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h $POSTGRES_SERVER -p 5432",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    networks:
      - nve_elt_network
    depends_on:
      - nve_db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark

  extract_load_script:
    restart: "no"
    build:
      context: ./src/source
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    ports:
      - "8889:8889"
    depends_on:
      nve_db:
        condition: service_healthy
    networks:
      - nve_elt_network
    env_file:
      - .env
    command: "/load/prestart.sh"

  # dbt:
  #   image: ghcr.io/dbt-labs/dbt-postgres:1.4.7
  #   command:
  #     [
  #       "run",
  #       "--profiles-dir",
  #       "/root",
  #       "--project-dir",
  #       "/dbt",
  #       "--full-refresh"
  #     ]
  #   networks:
  #     - nve_elt_network
  #   volumes:
  #     - ./src/transform:/dbt
  #     - ~/.dbt:/root
  #   # depends_on:
  #   #   - elt_script
  #   environment:
  #     DBT_PROFILE: default
  #     DBT_TARGET: dev

networks:
  nve_elt_network:
    driver: bridge

